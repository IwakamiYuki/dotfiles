# prefix
set-option -g prefix C-t
bind-key C-t send-prefix
unbind-key C-b

# ウィンドウ番号1から開始する
set-option -g base-index 1

# ウィンドウ履歴の最大行数
set-option -g history-limit 10000

# ステータスバーをトップに配置する
set-option -g status-position top

# 左右のステータスバーの長さを決定する
set-option -g status-left-length 90
set-option -g status-right-length 90

# #H => マシン名
# #P => ペイン番号
# 最左に表示
set-option -g status-left '#H:[#P]'

# Wi-Fi、バッテリー残量、現在時刻
# 最右に表示
set-option -g status-right '#(wifi) #(battery --tmux) %Y-%m-%d(%a) %H:%M:%S'


# ステータスバーを Utf-8 に対応
#set-option -g status-utf8 on

# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1

# status line の背景色を指定する。
#set-option -g status-bg "colour47"
set-option -g status-bg "colour208"

# status line の文字色を指定する。
#set-option -g status-fg "colour255"
set-option -g status-fg "colour232"

# センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre

# ペインの境界線の色を設定
set-option -g pane-border-style fg=colour94
set-option -g pane-active-border-style fg=colour208,bg=colour232,bold
# アクティブペインの背景色を少し明るくする
set-option -g window-active-style bg=colour234
set-option -g window-style bg=colour235


# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# マウス操作を有効にする
# これを有効にすると、MacでCommand+Cなどができなくなるが、Optionを押しながら範囲選択すると、コピーできる。
# http://qiita.com/jyotti/items/70a3a8035d767f99f93d
set-option -g mouse on

# Prefix keyあｇ押されているときにステータスバーに色をつける
set-option -g status-left '#[fg=colour232,bg=colour214]#{?client_prefix,#[reverse],} #H[#S] #[default]'


# | でペインを立てに分割する
unbind %
bind | split-window -h -c "#{pane_current_path}"
if-shell '[[ "`tmux -V`" =~ 1\.8 ]]' 'bind | split-window -h'

# - でペインを横に分割する
unbind '"'
bind - split-window -v -c "#{pane_current_path}"
if-shell '[[ "`tmux -V`" =~ 1\.8 ]]' 'bind - split-window -v'

## ペイストの設定
#set-option -g default-command "reattach-to-user-namespace -l bash"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# コピーモードでviのキーバインドを使う
setw -g mode-keys vi

# クリップボードの共有も
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
#set-option -g default-command "reattach-to-user-namespace -l zsh"""

# openコマンドを使えるようにする
#set -g default-command "reattach-to-user-namespace -l ${SHELL}\""
#set-option -g default-command ""

# synchronizeの設定
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# gでlazygitをポップアップウィンドウで開く
bind-key g display-popup -E -d "#{pane_current_path}" -h "95%" -w "95%" /opt/homebrew/bin/lazygit

# tmux-ai keybinding
bind-key a run-shell "~//work/other/tmux-ai/bin/tmux-ai"

# Git commit helper with Claude
# C-t m: Let Claude analyze git changes and suggest commit message
bind-key m display-popup -E -d "#{pane_current_path}" -h "80%" -w "80%" "zsh -c 'source ~/.zshrc 2>/dev/null; echo \"🤖 Claudeがgitの変更内容を分析中...\"; RESULT=\$(claude -p \"現在のgitの変更内容を分析して、適切なコミットメッセージを日本語で1つだけ出力してください。Conventional Commitsの形式で、簡潔で分かりやすい日本語のメッセージを作成してください。\"); CLEAN_RESULT=\$(printf \"%s\" \"\$RESULT\"); echo \"📝 提案されたコミットメッセージ:\"; printf \"%s\" \"\$CLEAN_RESULT\"; echo \"\\n📋 クリップボードにコピーしました\"; printf \"%s\" \"\$CLEAN_RESULT\" | pbcopy; sleep 1'"

